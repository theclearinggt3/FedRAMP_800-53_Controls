`Related Control 13`, `Related Control 14`, `Related Control 15`, `Related Control 16`,
`Related Control 17`, `Related Control 18`, `Related Control 19`, `Related Control 20`,
`Related Control 21`, `Related Control 22`, `Related Control 23`, `Related Control 24`,
`Related Control 25`, `Related Control 26`, `Related Control 27`, `Related Control 28`,
`Related Control 29`, `Related Control 30`, `Related Control 31`, `Related Control 32`,
`Related Control 33`, `Related Control 34`, `Related Control 35`, `Related Control 36`,
`Related Control 37`) %>% #reording the variables in the table
mutate(`Related Control 1` = str_trim(`Related Control 1`, side = "both"),
`Related Control 2` = str_trim(`Related Control 2`, side = "both"),
`Related Control 3` = str_trim(`Related Control 3`, side = "both"),
`Related Control 4` = str_trim(`Related Control 4`, side = "both"),
`Related Control 5` = str_trim(`Related Control 5`, side = "both"),
`Related Control 6` = str_trim(`Related Control 6`, side = "both"),
`Related Control 7` = str_trim(`Related Control 7`, side = "both"),
`Related Control 8` = str_trim(`Related Control 8`, side = "both"),
`Related Control 9` = str_trim(`Related Control 9`, side = "both"),
`Related Control 10` = str_trim(`Related Control 10`, side = "both"),
`Related Control 11` = str_trim(`Related Control 11`, side = "both"),
`Related Control 12` = str_trim(`Related Control 12`, side = "both"),
`Related Control 13` = str_trim(`Related Control 13`, side = "both"),
`Related Control 14` = str_trim(`Related Control 14`, side = "both"),
`Related Control 15` = str_trim(`Related Control 15`, side = "both"),
`Related Control 16` = str_trim(`Related Control 16`, side = "both"),
`Related Control 17` = str_trim(`Related Control 17`, side = "both"),
`Related Control 18` = str_trim(`Related Control 18`, side = "both"),
`Related Control 19` = str_trim(`Related Control 19`, side = "both"),
`Related Control 20` = str_trim(`Related Control 20`, side = "both"),
`Related Control 21` = str_trim(`Related Control 21`, side = "both"),
`Related Control 22` = str_trim(`Related Control 22`, side = "both"),
`Related Control 23` = str_trim(`Related Control 23`, side = "both"),
`Related Control 24` = str_trim(`Related Control 24`, side = "both"),
`Related Control 25` = str_trim(`Related Control 25`, side = "both"),
`Related Control 26` = str_trim(`Related Control 26`, side = "both"),
`Related Control 27` = str_trim(`Related Control 27`, side = "both"),
`Related Control 28` = str_trim(`Related Control 28`, side = "both")) %>%  #removing empty spaces in those variable's values. Not the smartest way of coding but does the job.
distinct()
HighControls2
HighControls3 <- HighControls1 %>%
gather(AllRelatedControls, Value, `Related Control 1`:`Related Control 28`, na.rm = TRUE) %>%
group_by(`Main Control`, `Combined`) %>%
mutate(AllRelatedControls2 = paste("Related Control", 1:n(), sep = " ")) %>%
rename(`Related Controls` = `Value`) %>%
select(-`AllRelatedControls`, -`AllRelatedControls2`) %>%
ungroup() %>%
arrange(`Main Control`, `Combined`)
HighControls3
HighControls3 <- HighControls1 %>%
gather(AllRelatedControls, Value, `Related Control 1`:`Related Control 28`, na.rm = TRUE) %>%
group_by(`Main Control`, `Combined`) %>%
mutate(AllRelatedControls2 = paste("Related Control", 1:n(), sep = " ")) %>%
rename(`Related Controls` = `Value`) %>%
select(-`AllRelatedControls`, -`AllRelatedControls2`) %>%
ungroup() %>%
arrange(`Main Control`, `Combined`) %>%
distinct()
HighControls3
HighControls4 <- HighControls1 %>%
select(-`Combined`) %>%
gather(AllRelatedControls, Value, `Related Control 1`:`Related Control 28`, na.rm = TRUE) %>%
group_by(`Main Control`) %>%
mutate(AllRelatedControls2 = paste("Related Control", 1:n(), sep = " ")) %>%
rename(`Related Controls` = `Value`) %>%
select(-`AllRelatedControls`, -`AllRelatedControls2`) %>%
ungroup() %>%
arrange(`Main Control`)
HighControls4
HighControls4 <- HighControls1 %>%
select(-`Combined`) %>%
gather(AllRelatedControls, Value, `Related Control 1`:`Related Control 28`, na.rm = TRUE) %>%
group_by(`Main Control`) %>%
mutate(AllRelatedControls2 = paste("Related Control", 1:n(), sep = " ")) %>%
rename(`Related Controls` = `Value`) %>%
select(-`AllRelatedControls`, -`AllRelatedControls2`) %>%
ungroup() %>%
arrange(`Main Control`) %>%
distinct()
HighControls4
join(HighControls4, HighControls4a,
type = "outer")
anti_join(HighControls4, HighControls4a)
HighControls4a <- HighControls1 %>%
select(-`Combined`) %>%
gather(AllRelatedControls, Value, `Related Control 1`:`Related Control 28`, na.rm = TRUE) %>%
group_by(`Main Control`) %>%
mutate(AllRelatedControls2 = paste("Related Control", 1:n(), sep = " ")) %>%
rename(`Related Controls` = `Value`) %>%
select(-`AllRelatedControls`, -`AllRelatedControls2`) %>%
ungroup() %>%
arrange(`Main Control`)
HighControls4a
anti_join(HighControls4, HighControls4a)
HighControls4a
HighControls4
anti_join(HighControls4, HighControls4a, by = c("Control Family", "Main Control", "Related Controls"))
anti_join(HighControls4, HighControls4a, by = c("Control Family", "Main Control", "Related Controls"))
table1 <- data.frame(id = c(1:5), animal = c("cat", "dog", "parakeet", "lion", "duck"))
table2 <- table1[c(1,3,5), ]
anti_join(table1, table2, by = "id")
HighControls4 <- HighControls1 %>%
select(-`Combined`) %>%
gather(AllRelatedControls, Value, `Related Control 1`:`Related Control 28`, na.rm = TRUE) %>%
group_by(`Main Control`) %>%
mutate(AllRelatedControls2 = paste("Related Control", 1:n(), sep = " ")) %>%
rename(`Related Controls` = `Value`) %>%
select(-`AllRelatedControls`, -`AllRelatedControls2`) %>%
ungroup() %>%
arrange(`Main Control`) %>%
distinct()
HighControls4
HighControls4a <- HighControls1 %>%
select(-`Combined`) %>%
gather(AllRelatedControls, Value, `Related Control 1`:`Related Control 28`, na.rm = TRUE) %>%
group_by(`Main Control`) %>%
mutate(AllRelatedControls2 = paste("Related Control", 1:n(), sep = " ")) %>%
rename(`Related Controls` = `Value`) %>%
select(-`AllRelatedControls`, -`AllRelatedControls2`) %>%
ungroup() %>%
arrange(`Main Control`)
HighControls4a
anti_join(HighControls4, HighControls4a, by = c("Control Family", "Main Control", "Related Controls"))
table1 <- data.frame(id = c(1:5), animal = c("cat", "dog", "parakeet", "lion", "duck"))
table2 <- table1[c(1,3,5), ]
anti_join(table1, table2, by = "id")
HighControls4 <- HighControls1 %>%
select(-`Combined`) %>%
gather(AllRelatedControls, Value, `Related Control 1`:`Related Control 28`, na.rm = TRUE) %>%
group_by(`Main Control`) %>%
mutate(AllRelatedControls2 = paste("Related Control", 1:n(), sep = " ")) %>%
rename(`Related Controls` = `Value`) %>%
select(-`AllRelatedControls`, -`AllRelatedControls2`) %>%
ungroup() %>%
arrange(`Main Control`) %>%
distinct()
HighControls4
CountRC <- HighControls3 %>%
group_by(`Related Controls`) %>%
summarise(n_RelatedControls = n()) %>%
arrange(desc(n_RelatedControls))
CountRC
CountRC <- HighControls3 %>%
group_by(`Related Controls`) %>%
summarise(n_RelatedControls = n()) %>%
arrange(desc(n_RelatedControls)) %>%
distinct()
CountRC
CountRC_CE <- HighControls3 %>%
group_by(`Combined`) %>%
summarise(n_RelatedControls = n()) %>%
arrange(desc(n_RelatedControls))
CountRC_CE
CountRC_CE <- HighControls3 %>%
group_by(`Combined`) %>%
summarise(n_RelatedControls = n()) %>%
arrange(desc(n_RelatedControls)) %>%
distinct()
CountRC_CE
CountRC_MC <- HighControls3 %>%
group_by(`Main Control`, `Related Controls`) %>%
summarise(n_RelatedControls = n()) %>%
arrange(desc(n_RelatedControls))
CountRC_MC
CountRC_MC <- HighControls3 %>%
group_by(`Main Control`, `Related Controls`) %>%
summarise(n_RelatedControls = n()) %>%
arrange(desc(n_RelatedControls)) %>%
distinct()
CountRC_MC
CountRC_CF <- HighControls3 %>%
group_by(`Control Family`, `Related Controls`) %>%
summarise(n_RelatedControls = n()) %>%
arrange(desc(n_RelatedControls))
CountRC_CF
CountRC_CF <- HighControls3 %>%
group_by(`Control Family`, `Related Controls`) %>%
summarise(n_RelatedControls = n()) %>%
arrange(desc(n_RelatedControls)) %>%
distinct()
CountRC_CF
##By count of Related Controls
CountCF <- HighControls3 %>%
group_by(`Control Family`) %>%
summarise(n_ControlFamily = n()) %>%
arrange(desc(n_ControlFamily))
CountCF
##By count of Related Controls
CountCF <- HighControls3 %>%
group_by(`Control Family`) %>%
summarise(n_ControlFamily = n()) %>%
arrange(desc(n_ControlFamily)) %>%
distinct()
CountCF
##By ratio of Controls
CountCFRatio <- HighControls3 %>%
mutate(n_TotalControls = n_distinct(`Combined`)) %>%
group_by(`Control Family`) %>%
mutate(n_Controls_by_Fam = n_distinct(`Combined`),
Ratio_Controls = n_Controls_by_Fam/n_TotalControls) %>%
arrange(desc(Ratio_Controls))
CountCFRatio
##By ratio of Controls
CountCFRatio <- HighControls3 %>%
mutate(n_TotalControls = n_distinct(`Combined`)) %>%
group_by(`Control Family`) %>%
mutate(n_Controls_by_Fam = n_distinct(`Combined`),
Ratio_Controls = n_Controls_by_Fam/n_TotalControls) %>%
arrange(desc(Ratio_Controls)) %>%
distinct()
CountCFRatio
HighControls4 <- HighControls1 %>%
select(-`Combined`) %>%
gather(AllRelatedControls, Value, `Related Control 1`:`Related Control 28`, na.rm = TRUE) %>%
group_by(`Main Control`) %>%
mutate(AllRelatedControls2 = paste("Related Control", 1:n(), sep = " ")) %>%
rename(`Related Controls` = `Value`) %>%
select(-`AllRelatedControls`, -`AllRelatedControls2`) %>%
ungroup() %>%
arrange(`Main Control`) %>%
distinct()
HighControls4
HighControls5 <- unique(HighControls4)
HighControls5
HighControls4 <- HighControls1 %>%
select(-`Combined`) %>%
gather(AllRelatedControls, Value, `Related Control 1`:`Related Control 28`, na.rm = TRUE) %>%
group_by(`Main Control`) %>%
mutate(AllRelatedControls2 = paste("Related Control", 1:n(), sep = " ")) %>%
rename(`Related Controls` = `Value`) %>%
select(-`AllRelatedControls`, -`AllRelatedControls2`) %>%
ungroup() %>%
arrange(`Main Control`) %>%
distinct()
HighControls4
CountRC <- HighControls3 %>%
group_by(`Related Controls`) %>%
summarise(n_RelatedControls = n()) %>%
arrange(desc(n_RelatedControls)) %>%
distinct()
head(CountRC)
write_csv(CountRC, "CountRC.csv") #exporting CountRC into a csv file called CountRC.csv into your directory.
#TESTING
#Number of times Related Controls = "AC-3" exists?
#Answer = 29
HighControls3 %>%
filter(`Related Controls` == 'AC-3')
#VISUAL
CountRC %>%
filter(n_RelatedControls >= 10) %>%
ggplot(aes(reorder(`Related Controls`, -n_RelatedControls), n_RelatedControls)) +
geom_bar(stat = "identity") +
ggtitle("Most Important Related Controls based on Count") +
xlab("Top 21 Related Controls") +
ylab("Number of Related Controls")
CountRC_CE <- HighControls3 %>%
group_by(`Combined`) %>%
summarise(n_RelatedControls = n()) %>%
arrange(desc(n_RelatedControls)) %>%
distinct()
head(CountRC_CE)
write_csv(CountRC_CE, "CountRC_CE.csv") #exporting CountRC_CE into a csv file called CountRC_CE.csv into your directory.
#TESTING
#How many Related Controls are there when the Main Control = "AU-6" and the Control Enhancement = "0"?
#Answer = 28
HighControls3 %>%
filter(`Combined` == 'AU-6-0')
#VISUAL
CountRC_CE %>%
filter(n_RelatedControls >= 15) %>%
ggplot(aes(reorder(`Combined`, -n_RelatedControls), n_RelatedControls)) +
geom_bar(stat = "identity") +
ggtitle("Largest Amount of Related Controls for each Control") +
xlab("Top 11 Controls") +
ylab("Number of Related Controls")
CountRC_MC <- HighControls3 %>%
group_by(`Main Control`, `Related Controls`) %>%
summarise(n_RelatedControls = n()) %>%
arrange(desc(n_RelatedControls)) %>%
distinct()
head(CountRC_MC)
write_csv(CountRC_MC, "CountRC_MC.csv") #exporting CountRC_MC into a csv file called CountRC_MC.csv into your directory.
#TESTING
#Number of Related Controls when Related Controls = "AU-12" and Main Control = "AU-6"?
#Answer = 4
HighControls3 %>%
filter(`Related Controls` == 'AU-12',
`Main Control` == 'AU-6')
#VISUAL
#CountRC_MC %>%
#  filter(n_RelatedControls > 1) %>%
#  ggplot(aes(reorder(`Main Control`, -n_RelatedControls), n_RelatedControls)) +
#    geom_point() +
#    geom_text(aes(label = `Related Controls`), size = 3, check_overlap = TRUE) +
#    ggtitle("Largest Amount of Related Controls for each Main Control") +
#    xlab("Top 16 Main Controls") +
#    ylab("Number of Related Controls")
CountRC_CF <- HighControls3 %>%
group_by(`Control Family`, `Related Controls`) %>%
summarise(n_RelatedControls = n()) %>%
arrange(desc(n_RelatedControls)) %>%
distinct()
head(CountRC_CF)
write_csv(CountRC_CF, "CountRC_CF.csv") #exporting CountRC_CF into a csv file called CountRC_CF.csv into your directory.
#TESTING
#Number of Related Controls when Related Controls = "AC-3" and Control Family = "AC"?
#Answer = 11
HighControls3 %>%
filter(`Related Controls` == 'AC-3',
`Control Family` == 'AC')
#VISUAL
#CountRC_CF %>%
#  filter(n_RelatedControls > 1) %>%
#  ggplot(aes(reorder(`Control Family`, -n_RelatedControls), n_RelatedControls)) +
#    geom_point() +
#    geom_text(aes(label = `Related Controls`), size = 3, check_overlap = TRUE) +
#    ggtitle("Number of Related Controls for each Control Family") +
#    xlab("Top 16 Control Family") +
#    ylab("Number of Related Controls")
##By count of Related Controls
CountCF <- HighControls3 %>%
group_by(`Control Family`) %>%
summarise(n_ControlFamily = n()) %>%
arrange(desc(n_ControlFamily)) %>%
distinct()
head(CountCF)
write_csv(CountCF, "CountCF.csv") #exporting CountCF into a csv file called CountCF.csv into your directory.
#TESTING
#Number of Related Controls when Control Family = "AC"?
#Answer = 162
HighControls3 %>%
filter(`Control Family` == 'AC')
#VISUAL
CountCF %>%
#filter(n_ControlFamily >= 15) %>%
ggplot(aes(reorder(`Control Family`, -n_ControlFamily), n_ControlFamily)) +
geom_bar(stat = "identity") +
#geom_text(aes(label = `Related Controls`), size = 3, check_overlap = TRUE) +
ggtitle("Number of Related Controls for each Control Family") +
xlab("Control Families") +
ylab("Number of Related Controls")
#################################################################################################
##By ratio of Controls
CountCFRatio <- HighControls3 %>%
mutate(n_TotalControls = n_distinct(`Combined`)) %>%
group_by(`Control Family`) %>%
mutate(n_Controls_by_Fam = n_distinct(`Combined`),
Ratio_Controls = n_Controls_by_Fam/n_TotalControls) %>%
arrange(desc(Ratio_Controls)) %>%
distinct()
head(CountCFRatio)
write_csv(CountCFRatio, "CountCFRatio.csv") #exporting CountCFRatio into a csv file called CountCFRatio.csv into your directory.
#TESTING
#VISUAL
#CountCFRatio %>%
#  filter(n_ControlFamily >= 15) %>%
#  ggplot(aes(reorder(`Control Family`, -n_ControlFamily), n_ControlFamily)) +
#    geom_bar(stat = "identity") +
#    geom_text(aes(label = `Related Controls`), size = 3, check_overlap = TRUE) +
#    ggtitle("Number of Related Controls for each Control Family") +
#    xlab("Control Families") +
#    ylab("Number of Related Controls")
#**Selecting only the columns needed and renaming columns with underscore **
Controls_mod <- Controls
names(Controls_mod) <- c("Control_Family","Family_Name","Control_Name", "Main_Control","Control_Enhancement_Name", "Control_Enhancement","Combined","Related_Controls","Low","Low_1","Tailoring_Action","Medium","Medium_1","High","High_1","Priority","Impact")
#**Only looking at High Impact Controls
Gephi_Controls <- Controls_mod %>%
filter(High == "Y") %>% #filtering to High Baseline
select(Control_Family, Family_Name, Main_Control, Control_Name, Control_Enhancement, Combined, Related_Controls)
#,Low, Medium, High, Impact, Tailoring_Action)
Gephi_Controls1 <- Gephi_Controls %>%
select(-Control_Enhancement) %>%
separate(Related_Controls, paste("Related_Control", 1:28, sep = "_"),
sep = ",",
extra = "warn") %>% #spreading Related Controls into different columns
mutate(Related_Control_1 = str_trim(Related_Control_1, side = "both"),
Related_Control_2 = str_trim(Related_Control_2, side = "both"),
Related_Control_3 = str_trim(Related_Control_3, side = "both"),
Related_Control_4 = str_trim(Related_Control_4, side = "both"),
Related_Control_5 = str_trim(Related_Control_5, side = "both"),
Related_Control_6 = str_trim(Related_Control_6, side = "both"),
Related_Control_7 = str_trim(Related_Control_7, side = "both"),
Related_Control_8 = str_trim(Related_Control_8, side = "both"),
Related_Control_9 = str_trim(Related_Control_9, side = "both"),
Related_Control_10 = str_trim(Related_Control_10, side = "both"),
Related_Control_11 = str_trim(Related_Control_11, side = "both"),
Related_Control_12 = str_trim(Related_Control_12, side = "both"),
Related_Control_13 = str_trim(Related_Control_13, side = "both"),
Related_Control_14 = str_trim(Related_Control_14, side = "both"),
Related_Control_15 = str_trim(Related_Control_15, side = "both"),
Related_Control_16 = str_trim(Related_Control_16, side = "both"),
Related_Control_17 = str_trim(Related_Control_17, side = "both"),
Related_Control_18 = str_trim(Related_Control_18, side = "both"),
Related_Control_19 = str_trim(Related_Control_19, side = "both"),
Related_Control_20 = str_trim(Related_Control_20, side = "both"),
Related_Control_21 = str_trim(Related_Control_21, side = "both"),
Related_Control_22 = str_trim(Related_Control_22, side = "both"),
Related_Control_23 = str_trim(Related_Control_23, side = "both"),
Related_Control_24 = str_trim(Related_Control_24, side = "both"),
Related_Control_25 = str_trim(Related_Control_25, side = "both"),
Related_Control_26 = str_trim(Related_Control_26, side = "both"),
Related_Control_27 = str_trim(Related_Control_27, side = "both"),
Related_Control_28 = str_trim(Related_Control_28, side = "both")) #removing empty spaces in those variable's values.
Gephi_Controls2 <- Gephi_Controls %>%
select(-Control_Enhancement, -Combined) %>%
separate(Related_Controls, paste("Related_Control", 1:28, sep = "_"),
sep = ",",
extra = "warn") %>% #spreading Related Controls into different columns
gather(AllRelatedControls, Value,
Related_Control_1:Related_Control_28, na.rm = TRUE) %>%
group_by(Main_Control) %>%
mutate(AllRelatedControls2 = paste("Related_Control", 1:n(), sep = "_")) %>%
ungroup() %>%
select(-AllRelatedControls) %>%
spread(AllRelatedControls2, Value, convert = TRUE) %>%
select(Control_Family, Family_Name, Main_Control, Control_Name, #Low, Medium, High, Impact,
Related_Control_1, Related_Control_2, Related_Control_3, Related_Control_4, Related_Control_5,
Related_Control_6, Related_Control_7, Related_Control_8, Related_Control_9, Related_Control_10,
Related_Control_11, Related_Control_12, Related_Control_13, Related_Control_14, Related_Control_15,
Related_Control_16, Related_Control_17, Related_Control_18, Related_Control_19, Related_Control_20,
Related_Control_21, Related_Control_22, Related_Control_23, Related_Control_24, Related_Control_25,
Related_Control_26, Related_Control_27, Related_Control_28, Related_Control_29, Related_Control_30,
Related_Control_31, Related_Control_32, Related_Control_33, Related_Control_34, Related_Control_35,
Related_Control_36, Related_Control_37) %>% #reording the variables in the table
mutate(Related_Control_1 = str_trim(Related_Control_1, side = "both"),
Related_Control_2 = str_trim(Related_Control_2, side = "both"),
Related_Control_3 = str_trim(Related_Control_3, side = "both"),
Related_Control_4 = str_trim(Related_Control_4, side = "both"),
Related_Control_5 = str_trim(Related_Control_5, side = "both"),
Related_Control_6 = str_trim(Related_Control_6, side = "both"),
Related_Control_7 = str_trim(Related_Control_7, side = "both"),
Related_Control_8 = str_trim(Related_Control_8, side = "both"),
Related_Control_9 = str_trim(Related_Control_9, side = "both"),
Related_Control_10 = str_trim(Related_Control_10, side = "both"),
Related_Control_11 = str_trim(Related_Control_11, side = "both"),
Related_Control_12 = str_trim(Related_Control_12, side = "both"),
Related_Control_13 = str_trim(Related_Control_13, side = "both"),
Related_Control_14 = str_trim(Related_Control_14, side = "both"),
Related_Control_15 = str_trim(Related_Control_15, side = "both"),
Related_Control_16 = str_trim(Related_Control_16, side = "both"),
Related_Control_17 = str_trim(Related_Control_17, side = "both"),
Related_Control_18 = str_trim(Related_Control_18, side = "both"),
Related_Control_19 = str_trim(Related_Control_19, side = "both"),
Related_Control_20 = str_trim(Related_Control_20, side = "both"),
Related_Control_21 = str_trim(Related_Control_21, side = "both"),
Related_Control_22 = str_trim(Related_Control_22, side = "both"),
Related_Control_23 = str_trim(Related_Control_23, side = "both"),
Related_Control_24 = str_trim(Related_Control_24, side = "both"),
Related_Control_25 = str_trim(Related_Control_25, side = "both"),
Related_Control_26 = str_trim(Related_Control_26, side = "both"),
Related_Control_27 = str_trim(Related_Control_27, side = "both"),
Related_Control_28 = str_trim(Related_Control_28, side = "both"),
Related_Control_29 = str_trim(Related_Control_29, side = "both"),
Related_Control_30 = str_trim(Related_Control_30, side = "both"),
Related_Control_31 = str_trim(Related_Control_31, side = "both"),
Related_Control_32 = str_trim(Related_Control_32, side = "both"),
Related_Control_33 = str_trim(Related_Control_33, side = "both"),
Related_Control_34 = str_trim(Related_Control_34, side = "both"),
Related_Control_35 = str_trim(Related_Control_35, side = "both"),
Related_Control_36 = str_trim(Related_Control_36, side = "both"),
Related_Control_37 = str_trim(Related_Control_37, side = "both")) #removing empty spaces in those variable's values.
Gephi_Controls4 <- Gephi_Controls1 %>%
select (-Combined) %>%
gather(AllRelatedControls, Value, Related_Control_1:Related_Control_28, na.rm = TRUE) %>%
group_by(Main_Control) %>%
mutate(AllRelatedControls2 = paste("Related_Control", 1:n(), sep = "_")) %>%
rename(Related_Controls = Value) %>%
select(-AllRelatedControls, -AllRelatedControls2) %>%
ungroup() %>%
arrange(Main_Control)
#This removes 36 duplicates (ex. AU-6 & AU-12, AC-18 & AC-19)
Gephi_Controls5 <- unique(Gephi_Controls4)
#This provideds a new column -- "Weight" -- counts on the duplicates
Gephi_Controls6 <- Gephi_Controls4 %>%
# (Main_Control, Control_Name, Control_Family, Family_Name, Related_Controls )
group_by(Control_Family, Family_Name, Main_Control, Control_Name, Related_Controls) %>%
summarise(n = n()) %>%
rename("Weight"=n) #%>%
#arrange(desc(Weight))
#Create Node Table
#Capturing distinct Main Controls
Nodes <- distinct(Controls_mod, Control_Family, Family_Name, Main_Control, Control_Name)
Nodes
#Adding Name column
Nodes["Name"] = Nodes$Main_Control
Nodes
#Reordering and renaming columns
Nodes <- Nodes %>%
select (Main_Control, Name, Control_Name, Control_Family, Family_Name) %>%
rename("Id" = Main_Control)
#***~***~***
#Create Edges Table
Edges <- Gephi_Controls4 %>%
group_by(Main_Control, Related_Controls) %>%
summarise(n = n()) %>%
rename(Source = Main_Control, Target = Related_Controls, Weight=n) #%>%
#arrange(desc(Weight))
Edges
#Turning Networks into igraph objects
net <- graph_from_data_frame(d=Edges, vertices=Nodes, directed=T)
library(sqldf)
install.packages("plyr")
install.packages("plyr")
install.packages("sqldf")
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(readr)
library(tidyverse)
library(ggplot2)
library(igraph)
library(dplyr)
library(plyr)
library(sqldf)
#Turning Networks into igraph objects
net <- graph_from_data_frame(d=Edges, vertices=Nodes, directed=T)
